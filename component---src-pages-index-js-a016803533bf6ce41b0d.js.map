{"version":3,"file":"component---src-pages-index-js-a016803533bf6ce41b0d.js","mappings":"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","sources":["webpack://gatsby-starter-portfolio-minimal-theme/./src/components/ArticleCard/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/ArticleCard/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/Slider/style.module.css","webpack://gatsby-starter-portfolio-minimal-theme/./src/components/Slider/index.js","webpack://gatsby-starter-portfolio-minimal-theme/./src/pages/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var Banner = \"style-module--Banner--f56d9\";\nexport var Card = \"style-module--Card--98070\";\nexport var Category = \"style-module--Category--a7a51\";\nexport var DescriptionWrapper = \"style-module--DescriptionWrapper--cafb3\";\nexport var Details = \"style-module--Details--21478\";\nexport var Image = \"style-module--Image--66f41\";\nexport var ImageWrapper = \"style-module--ImageWrapper--8847f\";\nexport var ReadingTime = \"style-module--ReadingTime--b2a63\";\nexport var Title = \"style-module--Title--f3999\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport SkeletonLoader from 'tiny-skeleton-loader-react';\nimport * as classes from './style.module.css';\n\n/*export interface ArticleCard {\n    image?: ImageObject;\n    category: string;\n    title: string;\n    publishedAt: Date;\n    readingTime?: string;\n    link: string;\n}\n\ninterface ArticleCardProps {\n    data: ArticleCard;\n    showBanner?: boolean;\n}*/\n\nexport function ArticleCard(props) {\n    const darkModeEnabled = false;\n\n    // Needed to differentiate between external and internal links (whether or not we use Gatsby Link)\n    const absoluteUrl = props.data.link.indexOf('://') > 0 || props.data.link.indexOf('//') === 0;\n\n    const articleCard = (\n        <article\n            className={classes.Card}\n            style={darkModeEnabled ? { border: '0.125rem solid var(--primary-color)' } : undefined}\n        >\n            {props.showBanner && (\n                <div className={classes.Banner}>\n                    {props.data.image && props.data.image.src && (\n                        <GatsbyImage\n                            className={classes.ImageWrapper}\n                            imgClassName={classes.Image}\n                            objectFit={props.data.image.objectFit || 'cover'}\n                            image={props.data.image.src.childImageSharp.gatsbyImageData}\n                            alt={props.data.image.alt || props.data.title}\n                        />\n                    )}\n                </div>\n            )}\n            <div className={classes.DescriptionWrapper}>\n                <span className={classes.Category}>\n                    <u>{props.data.category}</u>\n                </span>\n                <h4 className={classes.Title}>{props.data.title}</h4>\n                <div className={classes.Details}>\n                    {formatDate(props.data.publishedAt)}\n                    {props.data.readingTime && <span className={classes.ReadingTime}>{props.data.readingTime}</span>}\n                </div>\n            </div>\n        </article>\n    );\n\n    return absoluteUrl ? (\n        <a href={props.data.link} target=\"_blank\" rel=\"noopener noreferrer\" title={props.data.title}>\n            {articleCard}\n        </a>\n    ) : (\n        <Link to={props.data.link} title={props.data.title}>\n            {articleCard}\n        </Link>\n    );\n}\n\nexport function ArticleCardSkeleton() {\n    const darkModeEnabled = false;\n    return (\n        <div\n            className={classes.Card}\n            style={darkModeEnabled ? { border: '0.125rem solid var(--primary-color)' } : undefined}\n        >\n            <div className={classes.DescriptionWrapper}>\n                <SkeletonLoader\n                    style={{\n                        height: '1.5rem',\n                        marginBottom: '.5rem',\n                        background: 'var(--tertiary-color)',\n                    }}\n                />\n                <SkeletonLoader style={{ height: '4rem', background: 'var(--tertiary-color)' }} />\n                <SkeletonLoader\n                    style={{\n                        height: '.75rem',\n                        width: '50%',\n                        marginTop: '.5rem',\n                        background: 'var(--tertiary-color)',\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction formatDate(date) {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    return `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n}","// extracted by mini-css-extract-plugin\nexport var SlideContainer = \"style-module--SlideContainer--99154\";","import React from 'react';\nimport * as classes from './style.module.css';\n\nexport function Slider(props) {\n    let classList;\n    if (props.additionalClasses) {\n        classList = props.additionalClasses.concat(classes.SlideContainer).join(' ');\n    } else {\n        classList = classes.SlideContainer;\n    }\n    return (\n        <div className={classList} style={props.style}>\n            {props.children}\n        </div>\n    );\n}","import React from \"react\";\nimport {\n  AboutSection,\n  ArticlesSection,\n  ContactSection,\n  InterestsSection,\n  Page,\n  ProjectsSection,\n  Animation,\n  Section,\n  Seo,\n} from \"gatsby-theme-portfolio-minimal\";\nimport {\n  ArticleCard,\n  ArticleCardSkeleton\n} from \"../components/ArticleCard\";\nimport { Slider } from \"../components/Slider\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport \"./gatsby-theme-portfolio-minimal/globalStyles/theme.css\";\n\nexport default function IndexPage() {\n  const response = useStaticQuery(graphql`\n    query VideoListingQuery {\n      allYoutubeVideo {\n        edges {\n          node {\n            id\n            title\n            description\n            videoId\n            publishedAt\n            privacyStatus\n            channelTitle\n            thumbnail {\n              url\n              width\n              height\n            }\n          }\n        }\n      }\n    }\n  `);\n  const [articles, setArticles] = React.useState([]);\n  async function collectArticlesFromSources() {\n    const articleList = [];\n\n    const blogArticles = response.allYoutubeVideo.edges;\n    if (blogArticles.length > 0) {\n      blogArticles.forEach((video) => {\n        articleList.push({\n          image: {\n            src: {\n              childImageSharp: {\n                gatsbyImageData: {\n                  layout: \"fixed\",\n                  width: 260,\n                  height: 100,\n                  images: {\n                    //@ts-ignore\n                    src: video.node.thumbnail.url,\n                  },\n                },\n              },\n            },\n          },\n          category: video.node.title,\n          title: \"\",\n          publishedAt: new Date(video.node.publishedAt),\n          link: `https://www.youtube.com/watch?v=${video.node.videoId}`,\n          readingTime: \"\",\n        });\n      });\n    }\n\n    return articleList\n      .slice()\n      .sort((a, b) => b.publishedAt.getTime() - a.publishedAt.getTime());\n  }\n\n  React.useEffect(() => {\n    (async function () {\n      setArticles(await collectArticlesFromSources());\n    })();\n  }, []);\n  \n  return (\n    <>\n      <Seo title=\"Gatsby Starter for Portfolio Minimal\" />\n      <Page useSplashScreenAnimation style={{ backgroundColor: 'blue' }}>\n        <AboutSection sectionId=\"about\" heading=\"Sobre Mim\" />\n        <Animation type=\"fadeUp\" delay={1000}>\n          <Section anchor=\"videos\" heading=\"Últimos Videos\">\n            <Slider additionalClasses=\"\">\n              {articles.length > 0\n                ? articles.slice(0, 3).map((article, key) => {\n                    return (\n                      <ArticleCard key={key} data={article} showBanner={true} />\n                    );\n                  })\n                : [...Array(3)].map((_, key) => {\n                    return <ArticleCardSkeleton key={key} />;\n                  })}\n            </Slider>\n          </Section>\n        </Animation>\n        <ArticlesSection sectionId=\"articles\" heading=\"Latest Articles\" sources={['blog']} />\n        <InterestsSection sectionId=\"details\" heading=\"Details\" />\n        <ProjectsSection sectionId=\"youtube\" heading=\"Últimos Vídeos\" />\n        <ContactSection sectionId=\"github\" heading=\"Issues?\" />\n      </Page>\n    </>\n  );\n}\n"],"names":["Banner","Card","Category","DescriptionWrapper","Details","Image","ImageWrapper","ReadingTime","Title","ArticleCard","props","absoluteUrl","data","link","indexOf","articleCard","React","className","classes","style","undefined","showBanner","image","src","GatsbyImage","imgClassName","objectFit","childImageSharp","gatsbyImageData","alt","title","category","date","publishedAt","getMonth","getDate","getFullYear","readingTime","href","target","rel","Link","to","ArticleCardSkeleton","SkeletonLoader","height","marginBottom","background","width","marginTop","SlideContainer","Slider","classList","additionalClasses","concat","join","children","IndexPage","response","useStaticQuery","articles","setArticles","async","articleList","blogArticles","allYoutubeVideo","edges","length","forEach","video","push","layout","images","node","thumbnail","url","Date","videoId","slice","sort","a","b","getTime","collectArticlesFromSources","Seo","Page","useSplashScreenAnimation","backgroundColor","AboutSection","sectionId","heading","Animation","type","delay","Section","anchor","map","article","key","_toConsumableArray","Array","_","ArticlesSection","sources","InterestsSection","ProjectsSection","ContactSection"],"sourceRoot":""}